/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/** [ADMIN] RUN update_version.sh AFTER CHANGING THIS FILE **/

/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]
def versions = [:]
versions.room = "1.1.0"
versions.lifecycle = "1.1.1"
versions.support = "27.1.1"
versions.retrofit = "2.3.0"
versions.gson = "2.8.5"
versions.okhttp = "3.4.1"
versions.okhttp_logging_interceptor = "3.9.0"
versions.mockwebserver = "3.8.1"
versions.arouter_version = "1.3.1"
versions.arouter_processor_version = "1.1.4"
versions.constraint_layout = "1.0.2"
versions.glide = "4.7.1"
versions.android_gradle_plugin = "3.1.3"
versions.rxjava = "2.1.9"
versions.rx_android = "2.0.1"
versions.logger = "2.2.0"
versions.kotlin = "1.2.41"
versions.paging = "1.0.0"
versions.work = "1.0.0-alpha02"
versions.navigation = "1.0.0-alpha01"
versions.bottomnavigationviewex = "1.2.4"
def deps = [:]

/** support */
def support = [:]
support.annotations = "com.android.support:support-annotations:${versions.support}"
support.app_compat = "com.android.support:appcompat-v7:${versions.support}"
support.recyclerview = "com.android.support:recyclerview-v7:${versions.support}"
support.cardview = "com.android.support:cardview-v7:${versions.support}"
support.design = "com.android.support:design:${versions.support}"
support.v4 = "com.android.support:support-v4:${versions.support}"
support.core_utils = "com.android.support:support-core-utils:${versions.support}"
support.constraint_layout = "com.android.support.constraint:constraint-layout:${versions.constraint_layout}"
deps.support = support

/** room 数据库 */
def room = [:]
room.runtime = "android.arch.persistence.room:runtime:${versions.room}"
room.compiler = "android.arch.persistence.room:compiler:${versions.room}"
room.rxjava2 = "android.arch.persistence.room:rxjava2:${versions.room}"
room.testing = "android.arch.persistence.room:testing:${versions.room}"
deps.room = room

/** lifecycle 生命周期 */
def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:${versions.lifecycle}"
lifecycle.extensions = "android.arch.lifecycle:extensions:${versions.lifecycle}"
lifecycle.java8 = "android.arch.lifecycle:common-java8:${versions.lifecycle}"
lifecycle.compiler = "android.arch.lifecycle:compiler:${versions.lifecycle}"
deps.lifecycle = lifecycle

/** paging 分页加载 */
def paging = [:]
paging.runtime = "android.arch.paging:runtime:${versions.paging}"
deps.paging = paging

/** work 后台服务 */
def work = [:]
work.runtime = "android.arch.work:work-runtime:${versions.work}"
work.testing = "android.arch.work:work-testing:${versions.work}"
work.firebase = "android.arch.work:work-firebase:${versions.work}"
work.runtime_ktx = "android.arch.work:work-runtime-ktx:${versions.work}"
deps.work = work

/** navigation 导航 */
def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:${versions.navigation}"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:${versions.navigation}"
navigation.fragment = "android.arch.navigation:navigation-fragment:${versions.navigation}"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:${versions.navigation}"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:${versions.navigation}"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:${versions.navigation}"
deps.navigation = navigation

/** bottomnavigationviewex 底部菜单 */
def bottomnavigationviewex = [:]
bottomnavigationviewex.runtime = "com.github.ittianyu:BottomNavigationViewEx:${versions.bottomnavigationviewex}"
deps.bottomnavigationviewex = bottomnavigationviewex

/** arouter 路由 */
def arouter = [:]
arouter.runtime = "com.alibaba:arouter-api:${versions.arouter_version}"
arouter.compiler = "com.alibaba:arouter-compiler:${versions.arouter_processor_version}"
deps.arouter = arouter

/** retrofit 网络请求 */
def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:${versions.retrofit}"
retrofit.gson = "com.squareup.retrofit2:converter-gson:${versions.retrofit}"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:${versions.retrofit}"
retrofit.rxjava_adapter = "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
deps.retrofit = retrofit

/** okhttp 网络请求 */
def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
okhttp.mock_web_server = "com.squareup.okhttp3:mockwebserver:${versions.mockwebserver}"
deps.okhttp = okhttp

/** gson json解析 */
def gson = [:]
gson.runtime = "com.google.code.gson:gson:${versions.gson}"
deps.gson = gson

/** kotlin 语言 */
def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:${versions.kotlin}"
deps.kotlin = kotlin

/** glide 图片加载 */
def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:${versions.glide}"
glide.compiler = "com.github.bumptech.glide:compiler:${versions.glide}"
deps.glide = glide

/** rxjava 响应式编程 */
def rxjava = [:]
rxjava.rxjava = "io.reactivex.rxjava2:rxjava:${versions.rxjava}"
rxjava.rx_android = "io.reactivex.rxjava2:rxandroid:${versions.rx_android}"
deps.rxjava = rxjava

/** logger 日志控制 */
def logger = [:]
logger.runtime = "com.orhanobut:logger:${versions.logger}"
deps.logger = logger

/** android_gradle_plugin */
deps.android_gradle_plugin = "com.android.tools.build:gradle:${versions.android_gradle_plugin}"

/** versionCode */
deps.versionCode = 1
deps.versionName = "1.0.0"
deps.applicationId = "com.msc.eyepetizer"

/** build_versions */
def build_versions = [:]
build_versions.compile_sdk = 27
build_versions.min_sdk = 14
build_versions.target_sdk = 27
build_versions.build_tools = "27.0.3"
ext.build_versions = build_versions

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    handler.maven { url "https://jitpack.io" }
}

ext.addRepos = this.&addRepos



